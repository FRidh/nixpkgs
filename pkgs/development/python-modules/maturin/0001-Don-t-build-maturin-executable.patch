From 9155e15034a1dcf7bfe1424f29bd596eb8cea074 Mon Sep 17 00:00:00 2001
From: Frederik Rietdijk <fridh@fridh.nl>
Date: Mon, 26 Oct 2020 15:26:41 +0100
Subject: [PATCH 1/3] Don't build maturin executable

---
 setup.py | 30 ------------------------------
 1 file changed, 30 deletions(-)

diff --git a/setup.py b/setup.py
index e3590d2..d4d0c8e 100644
--- a/setup.py
+++ b/setup.py
@@ -41,36 +41,6 @@ except ImportError:
 class PostInstallCommand(install):
     """Post-installation for installation mode."""
 
-    def run(self):
-        source_dir = os.path.dirname(os.path.abspath(__file__))
-        executable_name = "maturin.exe" if sys.platform.startswith("win") else "maturin"
-
-        # Shortcut for development
-        existing_binary = os.path.join(source_dir, "target", "debug", executable_name)
-        if os.path.isfile(existing_binary):
-            source = existing_binary
-        else:
-            if not shutil.which("cargo"):
-                raise RuntimeError(
-                    "cargo not found in PATH. Please install rust "
-                    "(https://www.rust-lang.org/tools/install) and try again"
-                )
-            subprocess.check_call(
-                ["cargo", "rustc", "--bin", "maturin", "--", "-C", "link-arg=-s"]
-            )
-            source = os.path.join(source_dir, "target", "debug", executable_name)
-        # run this after trying to build with cargo (as otherwise this leaves
-        # venv in a bad state: https://github.com/benfred/py-spy/issues/69)
-        install.run(self)
-
-        target = os.path.join(self.install_scripts, executable_name)
-        os.makedirs(self.install_scripts, exist_ok=True)
-        self.copy_file(source, target)
-        self.copy_tree(
-            os.path.join(source_dir, "maturin"),
-            os.path.join(self.root or self.install_lib, "maturin"),
-        )
-
 
 with open("Readme.md", encoding="utf-8", errors="ignore") as fp:
     long_description = fp.read()
-- 
2.28.0

